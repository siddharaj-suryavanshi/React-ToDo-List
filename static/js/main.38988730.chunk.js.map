{"version":3,"sources":["components/header.js","components/todoInput.js","components/todoItem.js","App.js","components/LoginPage.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","React","Component","TodoInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","taskName","todoText","priority","dueDate","handleChange1","bind","assertThisInitialized","handleChange2","handleChange3","addTodo","e","setState","target","value","length","_this2","class","type","onChange","onClick","TodoItem","status","changeStatus","id","removeTodo","checked","className","aria-label","todo","text","App","todos","nextId","push","filter","index","header_Header","todoInput_TodoInput","map","todoItem_TodoItem","key","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.38988730.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Header extends React.Component {\n  render() {\n    return <h1>My ToDo List</h1>;\n  }\n}\n","import React from \"react\";\n//import \"../style/todoInput.css\";\n\nexport default class TodoInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      taskName: this.props.todoText,\n      priority: this.props.priority,\n      dueDate: this.props.dueDate\n    };\n\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleChange3 = this.handleChange3.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n  handleChange1(e) {\n    this.setState({\n      taskName: e.target.value,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    });\n  }\n\n  handleChange2(e) {\n    this.setState({\n      taskName: this.state.taskName,\n      priority: e.target.value,\n      dueDate: this.state.dueDate\n    });\n  }\n\n  handleChange3(e) {\n    this.setState({\n      taskName: this.state.taskName,\n      priority: this.state.priority,\n      dueDate: e.target.value\n    });\n  }\n\n  addTodo(taskName, priority, dueDate) {\n    // Ensure a todo was actually entered before submitting\n    if (taskName.length > 0) {\n      this.props.addTodo(taskName, priority, dueDate);\n      this.setState({\n        taskName: \"\",\n        priority: this.props.priority,\n        dueDate: \"\"\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <div class=\"form-group\">\n              Task Name\n              <input\n                type=\"text\"\n                value={this.state.taskName}\n                onChange={this.handleChange1}\n                class=\"form-control\"\n              />\n            </div>\n          </div>\n          <div class=\"col-md-3\">\n            <div class=\"form-group\">\n              Task priority\n              <select onChange={this.handleChange2} class=\"form-control\">\n                <option>None</option>\n                <option value=\"High\">High</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"Low\">Low</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"col-md-3\">\n            <div class=\"form-group\">\n              Due Date\n              <input\n                type=\"date\"\n                value={this.state.dueDate}\n                onChange={this.handleChange3}\n                class=\"form-control\"\n              />\n            </div>\n          </div>\n          <div class=\"col-md-2\">\n            <div class=\"form-group\">\n              <button\n                class=\"btn btn-md is-green mar-top\"\n                onClick={() =>\n                  this.addTodo(\n                    this.state.taskName,\n                    this.state.priority,\n                    this.state.dueDate\n                  )\n                }\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n//import \"../style/todoItem.css\";\n\nexport default class TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: this.props.status\n    };\n\n    this.changeStatus = this.changeStatus.bind(this);\n  }\n\n  removeTodo(id) {\n    this.props.removeTodo(id);\n  }\n\n  changeStatus(e) {\n    this.setState({\n      status: e.target.checked\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"todoWrapper\">\n        <div class=\"row\">\n          <div class=\"col-md-1\">\n            <input\n              type=\"checkbox\"\n              onChange={this.changeStatus}\n              aria-label={\n                this.props.todo.text +\n                \" \" +\n                this.props.priority +\n                \" \" +\n                this.props.dueDate\n              }\n            />\n          </div>\n          <div class=\"col-md-3\">{this.props.todo.text}</div>\n          <div class=\"col-md-3\">{this.props.todo.priority}</div>\n          <div class=\"col-md-2\">{this.props.todo.dueDate}</div>\n          <div class=\"col-md-2\">\n            <button\n              class=\"removeTodo\"\n              onClick={e => this.removeTodo(this.props.id)}\n              aria-label={\"Remove \" + this.props.todo.text + \" Task\"}\n            >\n              <i class=\"fa fa-trash-o\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n//import \"./style/App.css\";\nimport Header from \"./components/header\";\nimport TodoInput from \"./components/todoInput\";\nimport TodoItem from \"./components/todoItem\";\nimport LoginPage from \"./components/LoginPage\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [\n        {\n          id: 0,\n          text: \"Demo Task 1\",\n          priority: \"High\",\n          dueDate: \"13/11/2018\",\n          status: \"open\"\n        },\n        {\n          id: 1,\n          text: \"Demo Task 2\",\n          priority: \"Medium\",\n          dueDate: \"14/11/2018\",\n          status: \"open\"\n        }\n      ],\n      nextId: 2\n    };\n\n    this.addTodo = this.addTodo.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n  }\n\n  addTodo(todoText, priority, dueDate) {\n    let todos = this.state.todos;\n    todos.push({\n      id: this.state.nextId,\n      text: todoText,\n      priority: priority,\n      dueDate: dueDate\n    });\n    this.setState({\n      todos: todos,\n      nextId: ++this.state.nextId\n    });\n  }\n\n  removeTodo(id) {\n    this.setState({\n      todos: this.state.todos.filter((todo, index) => todo.id !== id)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"todo-wrapper\">\n          <Header />\n          <TodoInput\n            todoText=\"\"\n            priority=\"None\"\n            dueDate=\"\"\n            addTodo={this.addTodo}\n          />\n\n          {this.state.todos.map(todo => {\n            return (\n              <TodoItem\n                todo={todo}\n                key={todo.id}\n                id={todo.id}\n                removeTodo={this.removeTodo}\n                status={todo.status}\n                priority={todo.priority}\n                dueDate={todo.dueDate}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport \"../style/todo.css\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: \"\" };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    alert(\"A name was submitted: \" + this.state.value);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"form-group\">\r\n          <label for=\"ContentPlaceHolder1_txtemail\" id=\"ContentPlaceHolder1_l1\">\r\n            E-mail:\r\n          </label>\r\n          <div class=\"input-group\">\r\n            <span class=\"input-group-addon\">\r\n              <i class=\"glyphicon glyphicon-user\" />\r\n            </span>\r\n            <input\r\n              name=\"ctl00$ContentPlaceHolder1$txtemail\"\r\n              type=\"text\"\r\n              id=\"ContentPlaceHolder1_txtemail\"\r\n              class=\"form-control\"\r\n            />\r\n          </div>\r\n          <label\r\n            for=\"ContentPlaceHolder1_txtpassword\"\r\n            id=\"ContentPlaceHolder1_l2\"\r\n          >\r\n            Password:\r\n          </label>\r\n          <div class=\"input-group\">\r\n            <span class=\"input-group-addon\">\r\n              <i class=\"glyphicon glyphicon-lock\" />\r\n            </span>\r\n            <input\r\n              name=\"ctl00$ContentPlaceHolder1$txtpassword\"\r\n              type=\"password\"\r\n              id=\"ContentPlaceHolder1_txtpassword\"\r\n              class=\"form-control\"\r\n            />\r\n          </div>\r\n          <label\r\n            for=\"ContentPlaceHolder1_txtpassword\"\r\n            id=\"ContentPlaceHolder1_l2\"\r\n          >\r\n            Confirm Password:\r\n          </label>\r\n          <div class=\"input-group\">\r\n            <span class=\"input-group-addon\">\r\n              <i class=\"glyphicon glyphicon-lock\" />\r\n            </span>\r\n            <input\r\n              name=\"ctl00$ContentPlaceHolder1$txtpassword\"\r\n              type=\"password\"\r\n              id=\"ContentPlaceHolder1_txtpassword\"\r\n              class=\"form-control\"\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            name=\"ctl00$ContentPlaceHolder1$btnsubmit\"\r\n            value=\"Sign up\"\r\n            id=\"ContentPlaceHolder1_btnsubmit\"\r\n            class=\"btn btn-lg is-orange\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}